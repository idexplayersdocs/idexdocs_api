services:
  api:
    container_name: idexdocs_api
    build:
      context: ${PWD}
      dockerfile: docker/web/Dockerfile.local
    command: /app/.venv/bin/uvicorn asgi:app --host 0.0.0.0 --port 80 --reload --reload-dir /opt/code --access-log
    volumes:
      - ..:/opt/code
      - ./requirements:/opt/requirements
    ports:
      - "8000:80"
    depends_on:
      - sqlserver
    environment:
      TOKEN_KEY: ${TOKEN_KEY}
      MSSQL_USER: ${MSSQL_USER}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_HOSTNAME: sqlserver
      APPLICATION_DB: ${APPLICATION_DB}
      STORAGE_ACCOUNT: ${STORAGE_ACCOUNT}
  
  frontend:
    container_name: idexdocs_frontend
    image: node:18-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    volumes:
      - ../../idexdocs_frontend:/app
    environment:
      - NODE_ENV=development
    depends_on:
      - api
  
  sqlserver:
    image: mcr.microsoft.com/mssql/server
    user: root
    container_name: sqlserver_idex
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_USER: ${MSSQL_USER}
    ports:
      - "${MSSQL_PORT}:1433"
    volumes:
      - sqlserver_idex_data:/var/opt/mssql/data/:rw

volumes:
  sqlserver_idex_data: